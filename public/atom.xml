<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Memory Planet</title>
  
  
  <link href="/public/atom.xml" rel="self"/>
  
  <link href="https://xbini.github.io/public/"/>
  <updated>2018-12-13T09:13:38.124Z</updated>
  <id>https://xbini.github.io/public/</id>
  
  <author>
    <name>xbini</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习笔记</title>
    <link href="https://xbini.github.io/public/2018/12/13/notepad/"/>
    <id>https://xbini.github.io/public/2018/12/13/notepad/</id>
    <published>2018-12-13T09:12:46.605Z</published>
    <updated>2018-12-13T09:13:38.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;学习笔记&quot;&gt;&lt;a href=&quot;#学习笔记&quot; class=&quot;headerlink&quot; title=&quot;学习笔记&quot;&gt;&lt;/a&gt;学习笔记&lt;/h1&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SCSS 代码规范</title>
    <link href="https://xbini.github.io/public/2018/12/13/scss-style-guide/"/>
    <id>https://xbini.github.io/public/2018/12/13/scss-style-guide/</id>
    <published>2018-12-13T09:00:13.099Z</published>
    <updated>2018-12-13T09:00:13.100Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SCSS-代码规范"><a href="#SCSS-代码规范" class="headerlink" title="SCSS 代码规范"></a>SCSS 代码规范</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此规范扩展自 <a href="https://sass-guidelin.es/zh/" target="_blank" rel="noopener">Sass Guidelines</a>。</p><p>下面的额外规则覆盖上述规范对应部分。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p><strong>使用 <code>.scss</code> 的语法，不要使用 <code>.sass</code> 原本的语法。</strong></p><h2 id="SCSS-风格规则"><a href="#SCSS-风格规则" class="headerlink" title="SCSS 风格规则"></a>SCSS 风格规则</h2><h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><p>变量名应使用横杠式（例如 <code>$my-variable</code>）代替 camelCased 和 snake_cased 风格。对于仅用在当前文件的变量，<em>可以</em>在变量名之前添加下划线前缀（例如 <code>$_my-variable</code>）。</p><h3 id="混合指令（Mixin）"><a href="#混合指令（Mixin）" class="headerlink" title="混合指令（Mixin）"></a>混合指令（Mixin）</h3><p>为了让代码遵循 DRY 原则（Don’t Repeat Yourself）、增强清晰性或抽象化复杂性，应该使用 mixin，这与那些命名良好的函数的作用是异曲同工的。虽然 mixin 可以不接收参数，但要注意，假如你不压缩负载（比如通过 gzip），这样会导致最终的样式包含不必要的代码重复。</p><h3 id="扩展指令"><a href="#扩展指令" class="headerlink" title="扩展指令"></a>扩展指令</h3><p>应避免使用 <code>@extend</code> 指令，因为它并不直观，而且具有潜在风险，特别是用在嵌套选择器的时候。即便是在顶层占位符选择器使用扩展，如果选择器的顺序最终会改变，也可能会导致问题。（比如，如果它们存在于其他文件，而加载顺序发生了变化）。其实，使用 <code>@extend</code> 所获得的大部分优化效果，<code>gzip</code> 压缩已经帮助你做到了，因此你只需要通过 <code>@mixin</code> 让样式表更符合 DRY 原则就足够了。</p><h3 id="嵌套选择器"><a href="#嵌套选择器" class="headerlink" title="嵌套选择器"></a>嵌套选择器</h3><p><strong>还是<code>CSSOM</code>的性能问题，不要让嵌套选择器的深度超过 3 层！</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.page-container</span> &#123;</span><br><span class="line">  <span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="selector-class">.profile</span> &#123;</span><br><span class="line">      <span class="comment">// STOP!</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当遇到以上情况的时候，你也许是这样写 CSS 的（which is bad！）：</p><ul><li>与 HTML 强耦合的（也是脆弱的）<em>-or-</em></li><li>过于具体（强大）<em>-or-</em></li><li>没有重用</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SCSS-代码规范&quot;&gt;&lt;a href=&quot;#SCSS-代码规范&quot; class=&quot;headerlink&quot; title=&quot;SCSS 代码规范&quot;&gt;&lt;/a&gt;SCSS 代码规范&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML 代码规范</title>
    <link href="https://xbini.github.io/public/2018/12/13/html-style-guide/"/>
    <id>https://xbini.github.io/public/2018/12/13/html-style-guide/</id>
    <published>2018-12-13T09:00:13.098Z</published>
    <updated>2018-12-13T09:00:13.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-代码规范"><a href="#HTML-代码规范" class="headerlink" title="HTML 代码规范"></a>HTML 代码规范</h1><h2 id="通用规则"><a href="#通用规则" class="headerlink" title="通用规则"></a>通用规则</h2><blockquote><p>参阅 <a href="./html-css-common-style-guide.md">html-css-common-style-guide</a></p></blockquote><h2 id="HTML-风格规则"><a href="#HTML-风格规则" class="headerlink" title="HTML 风格规则"></a>HTML 风格规则</h2><h3 id="文档类型"><a href="#文档类型" class="headerlink" title="文档类型"></a>文档类型</h3><p><strong>使用 HTML5</strong></p><p>HTML5 推荐所有 HTML 文档使用 <code>&lt;!DOCTYPE html&gt;</code>。</p><blockquote><p>（推荐使用 HTML，即 <code>text/html</code> 。不推荐使用 XHTML，及 <a href="http://hixie.ch/advocacy/xhtml" target="_blank" rel="noopener"><code>application/xhtml+xml</code></a>，其缺少浏览器和工具支持，优化空间比 HTML 小。）</p></blockquote><p>不要闭合空标签，例如：要 <code>&lt;br&gt;</code>，而非 <code>&lt;br /&gt;</code>。尽管 HTML 两者都支持。</p><h3 id="有效的-HTML"><a href="#有效的-HTML" class="headerlink" title="有效的 HTML"></a>有效的 HTML</h3><p><strong>使用有效的 HTML 代码</strong></p><p>使用有效的 HTML 代码，否则很难达到性能上的提升。</p><p>使用 <a href="http://validator.w3.org/nu/" target="_blank" rel="noopener">W3C HTML validator</a> 等工具进行校验。</p><p>使用有效的 HTML 代码是重要的质量衡量标准，便于了解技术需求与约束，并可确保正确使用 HTML 代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span>This is only a test.</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span>This is only a test.<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="语义化"><a href="#语义化" class="headerlink" title="语义化"></a>语义化</h3><p><strong>使用 HTML 要符合语义</strong></p><p>符合本义地使用元素（标签），比如使用 heading 元素表示标题，使用 <code>p</code> 标签表示段落，使用 <code>a</code> 标签表示锚点等。</p><p>语义化地使用 HTML 有助于网页的可访问性，复用性和提高代码效率。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">"goToRecommendations();"</span>&gt;</span>All recommendations<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"recommendations/"</span>&gt;</span>All recommendations<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="多媒体备选内容"><a href="#多媒体备选内容" class="headerlink" title="多媒体备选内容"></a>多媒体备选内容</h3><p><strong>为多媒体提供备选内容</strong></p><p>对于多媒体，如图像，视频，基于 <code>canvas</code> 的动画对象，确保提供备选访问。对于图像，使用有意义的备选文案（ <code>alt</code> ）。对于视频和音频，尽量提供文字稿和文案说明。</p><p>提供备选内容对网页可访问性是很重要的：用 <code>@alt</code> 告诉盲人用户图像是关于什么的，给可能没理解视频或音频的内容的用户以提示。</p><blockquote><p>（图像的 <code>alt</code> 属性会产生冗余，对于不是在 CSS 中引用的非内容图像，就不要使用 <code>alt</code> 描述了。）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"spreadsheet.png"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"spreadsheet.png"</span> <span class="attr">alt</span>=<span class="string">"Spreadsheet screenshot."</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="关注点分离"><a href="#关注点分离" class="headerlink" title="关注点分离"></a>关注点分离</h3><p><strong>行为、呈现与结构分离</strong></p><p>严格保持结构 （标记），表现 （样式），和行为 （脚本）分离, 并最小化三者的相互作用。</p><p>确保文档和模板只包含 HTML 结构，把所有表现都放到样式表里，把所有行为都放到脚本里。</p><p>此外，尽量减少三者间的交集，即减少文档与模板中样式表与脚本的外链。</p><p>将表现和行为分开维护是很重要的，因为要在 HTML 文档中更改样式和行为花费成本更高。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML sucks<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"base.css"</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"grid.css"</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"print.css"</span> <span class="attr">media</span>=<span class="string">"print"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"font-size: 1em;"</span>&gt;</span>HTML sucks<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I’ve read about this on a few sites but now I’m sure: <span class="tag">&lt;<span class="name">u</span>&gt;</span>HTML is stupid!!1<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>I can’t believe there’s no way to control the styling of my website without doing everything all over again!<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>My first CSS-only redesign<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"default.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>My first CSS-only redesign<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I’ve read about this on a few sites but today I’m actually doing it: separating concerns and avoiding anything in the HTML of my website that is presentational.</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>It’s awesome!</span><br></pre></td></tr></table></figure><h3 id="实体引用"><a href="#实体引用" class="headerlink" title="实体引用"></a>实体引用</h3><p><strong>不要使用实体引用</strong></p><p>不需要使用类似 <code>&amp;mdash;</code> 、 <code>&amp;rdquo;</code> 和 <code>&amp;#x263a;</code>等的转义符，假如文件和编辑器以及团队之间用的是同一编码（UTF-8）。</p><p>例外的只能是，在 HTML 文档中具有特殊含义的字符（例如 <code>&lt;</code> 和 <code>&amp;</code> )，还有 控制字符 或 “不可见” 字符（例如 no-break 空格）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line">The currency symbol for the Euro is &amp;amp;ldquo;&amp;amp;eur;&amp;amp;rdquo;.</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line">The currency symbol for the Euro is “€”.</span><br></pre></td></tr></table></figure><h3 id="不允许-可选标签"><a href="#不允许-可选标签" class="headerlink" title="[不允许] 可选标签"></a><strong>[不允许]</strong> 可选标签</h3><p><strong>省略可选标签（可选）</strong></p><p>为了代码文件的体积和可读性，可以考虑省略可选的标签。<a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#syntax-tag-omission" target="_blank" rel="noopener">HTML5 specification</a> 定义了哪些标签是可以被省略的。</p><blockquote><p>（这种方法可能需要一段时间来建立更详细的规范，因为显然跟开发者通常认为的不一致。考虑到一致性和简洁的原因，省略所有可选标记是有必要的。）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Spending money, spending bytes<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Sic.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Saving money, saving bytes<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Qed.</span><br></pre></td></tr></table></figure><h3 id="type-属性"><a href="#type-属性" class="headerlink" title="type 属性"></a><code>type</code> 属性</h3><p><strong>在 style 和 scitpt 标签中省略 <code>type</code> 属性</strong></p><p>不要在 style 和 scitpt 标签中使用 <code>type</code> 属性（除非标签中引用的不是 CSS 或 JavaScript），</p><p>HTML5 默认使用 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#attr-style-type" target="_blank" rel="noopener"><code>text/css</code></a> 和 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#attr-script-type" target="_blank" rel="noopener"><code>text/javascript</code></a>，因此声明引用类型是不必要的，对于较老的浏览器也同样适用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//www.google.com/css/maia.css"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//www.google.com/css/maia.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//www.google.com/js/gweb/analytics/autotrack.js"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//www.google.com/js/gweb/analytics/autotrack.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-代码格式规则"><a href="#HTML-代码格式规则" class="headerlink" title="HTML 代码格式规则"></a>HTML 代码格式规则</h2><h3 id="通用格式"><a href="#通用格式" class="headerlink" title="通用格式"></a>通用格式</h3><p><strong>每个块级元素、列表元素或表格元素都独占一行，每个子元素都相对于此类父元素进行缩进。</strong></p><p>除了元素的样式（as CSS allows elements to assume a different role per <code>display</code> property), 将块元素、列表元素或表格元素都放在新行。</p><p>另外，需要缩进块级元素、列表元素或表格元素的子元素。</p><blockquote><p>（如果出现了列表项间的空格问题，可以试着将所有的 <code>li</code> 元素都放在一行。推荐代码校验器抛出警告而不是错误。)</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Space<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, the final frontier.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Moe</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Larry</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Curly</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>Income</span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>Taxes</span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$ 5.00</span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$ 4.50</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="HTML-引号"><a href="#HTML-引号" class="headerlink" title="HTML 引号"></a>HTML 引号</h3><p><strong>对属性值使用双引号</strong></p><p>在属性值的两侧，使用双引号 (<code>&quot;&quot;</code>) 而不是单引号 (<code>&#39;&#39;</code>).</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">'maia-button maia-button-secondary'</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"maia-button maia-button-secondary"</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Note: 上述规范来自 <a href="https://google.github.io/styleguide/htmlcssguide.html" target="_blank" rel="noopener">Google HTML/CSS Style Guide</a>。</p></blockquote><blockquote><p>Note: 上述带有 <strong>[不允许]</strong> 标记的是本规范异于 Google 规范之处。</p></blockquote><hr><hr><h2 id="额外补充"><a href="#额外补充" class="headerlink" title="额外补充"></a>额外补充</h2><h2 id="风格规则"><a href="#风格规则" class="headerlink" title="风格规则"></a>风格规则</h2><h3 id="元素-id-必须保证页面唯一"><a href="#元素-id-必须保证页面唯一" class="headerlink" title="元素 id 必须保证页面唯一"></a>元素 <code>id</code> 必须保证页面唯一</h3><p>同一个页面中，不同的元素包含相同的 <code>id</code>，不符合 <code>id</code> 的属性含义。并且使用 <code>document.getElementById</code> 时可能导致难以追查的问题。</p><h3 id="在-HTML-标签上设置正确的-lang-属性"><a href="#在-HTML-标签上设置正确的-lang-属性" class="headerlink" title="在 HTML 标签上设置正确的 lang 属性"></a>在 HTML 标签上设置正确的 <code>lang</code> 属性</h3><p>有助于提高页面的可访问性，如：让语音合成工具确定其所应该采用的发音，令翻译工具确定其翻译语言等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h3><h3 id="自关闭标签"><a href="#自关闭标签" class="headerlink" title="自关闭标签"></a>自关闭标签</h3><p>自关闭的标签不需要关闭。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image.png"</span> <span class="attr">alt</span>=<span class="string">"image"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image.png"</span> <span class="attr">alt</span>=<span class="string">"image"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="减少冗余标签"><a href="#减少冗余标签" class="headerlink" title="减少冗余标签"></a>减少冗余标签</h3><p>坚持避免使用冗余的父元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"assets/img/img.png"</span> <span class="attr">alt</span>=<span class="string">"Jane Doe"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"avatar"</span> <span class="attr">src</span>=<span class="string">"assets/img/img.png"</span> <span class="attr">alt</span>=<span class="string">"Jane Doe"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="布尔（boolean）型属性"><a href="#布尔（boolean）型属性" class="headerlink" title="布尔（boolean）型属性"></a>布尔（boolean）型属性</h3><p>布尔型属性可以在声明时不赋值。XHTML 规范要求为其赋值，但是 HTML5 规范不需要。</p><p>更多信息请参考 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#boolean-attributes" target="_blank" rel="noopener">WhatWG section on boolean attributes</a>：</p><blockquote><p>元素的布尔型属性如果有值，就是 <code>true</code>，如果没有值，就是 <code>false</code>。</p></blockquote><p>如果一定要为其赋值的话，请参考 WhatWG 规范：</p><blockquote><p>如果属性存在，其值必须是空字符串或 […] 属性的规范名称，并且不要在首尾添加空白符。</p></blockquote><p>简单来说，就是不用赋值。</p><h2 id="代码格式"><a href="#代码格式" class="headerlink" title="代码格式"></a>代码格式</h2><h3 id="行宽"><a href="#行宽" class="headerlink" title="行宽"></a>行宽</h3><p>每行不得超过 <strong>120</strong> 个字符。</p><p>过长的代码不容易阅读与维护。但是考虑到 HTML 的特殊性，不做硬性要求。</p><h3 id="属性顺序"><a href="#属性顺序" class="headerlink" title="属性顺序"></a>属性顺序</h3><p>HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。</p><ul><li><code>class</code></li><li><code>id</code>, <code>name</code></li><li><code>data-*</code></li><li><code>src</code>, <code>for</code>, <code>type</code>, <code>href</code>, <code>value</code></li><li><code>title</code>, <code>alt</code></li><li><code>role</code>, <code>aria-*</code></li></ul><p><code>class</code> 用于标识高度可复用组件，因此应该排在首位。<code>id</code> 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。</p><h3 id="过多-过长属性的元素"><a href="#过多-过长属性的元素" class="headerlink" title="过多/过长属性的元素"></a>过多/过长属性的元素</h3><blockquote><p>对于 HTML 元素，过长的代码行，必须按属性分行</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"maia-button maia-button-secondary"</span> <span class="attr">title</span>=<span class="string">"I'm a very very very very very very very very very very very very long title"</span> <span class="attr">href</span>=<span class="string">"http://example.com"</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"maia-button maia-button-secondary"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">title</span>=<span class="string">"I'm a very very very very very very very very very very very very long title"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">href</span>=<span class="string">"http://example.com"</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="HTML-中”-”两侧的空格"><a href="#HTML-中”-”两侧的空格" class="headerlink" title="HTML 中”=”两侧的空格"></a>HTML 中”=”两侧的空格</h3><p>HTML中 “=” 两侧不能存在空格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span> = <span class="string">"stylesheet"</span> <span class="attr">href</span> = <span class="string">"styles.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"styles.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="区段分隔"><a href="#区段分隔" class="headerlink" title="区段分隔"></a>区段分隔</h3><p><strong>利用空行来强调结构</strong></p><p>在HTML 中通过加空行来标记含义，以便更容易了解页面结构概况。例如，在区段间加入五行空行：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"page-head"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span> <span class="attr">class</span>=<span class="string">"page-content"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"page-foot"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用单行的空行来分割独立但不相关的区段，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"primary-nav"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"primary-nav__item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"primary-nav__link"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"primary-nav__item  primary-nav__trigger"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/about"</span> <span class="attr">class</span>=<span class="string">"primary-nav__link"</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"primary-nav__sub-nav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/about/products"</span>&gt;</span>Products<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/about/company"</span>&gt;</span>Company<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-head"><a href="#HTML-head" class="headerlink" title="HTML head"></a>HTML <code>head</code></h2><h3 id="启用-IE-Edge-模式"><a href="#启用-IE-Edge-模式" class="headerlink" title="启用 IE Edge 模式"></a>启用 IE Edge 模式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=Edge"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="title-标题"><a href="#title-标题" class="headerlink" title="title 标题"></a><code>title</code> 标题</h3><p><code>head</code> 必须包含 <code>title</code> 标签声明标题。</p><p><code>title</code> 必须作为 <code>head</code> 的直接子元素，并紧随 meta charset 声明之后。</p><h3 id="favicon"><a href="#favicon" class="headerlink" title="favicon"></a>favicon</h3><p>保证 favicon 可访问。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"path/to/favicon.ico"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><h3 id="使用-button-元素时必须指明-type-属性值"><a href="#使用-button-元素时必须指明-type-属性值" class="headerlink" title="使用 button 元素时必须指明 type 属性值"></a>使用 <code>button</code> 元素时必须指明 <code>type</code> 属性值</h3><p><code>button</code> 元素的默认 <code>type</code> 为 <code>submit</code>，如果被置于 <code>form</code> 元素中，点击后将导致表单提交。为显示区分其作用方便理解，必须给出 <code>type</code> 属性。</p><h2 id="可访问性额外参考"><a href="#可访问性额外参考" class="headerlink" title="可访问性额外参考"></a>可访问性额外参考</h2><p><a href="https://www.w3.org/TR/WCAG20/" target="_blank" rel="noopener">Web Content Accessibility Guidelines (WCAG) 2.0</a></p><h2 id="Microdata"><a href="#Microdata" class="headerlink" title="Microdata"></a>Microdata</h2><p>所有关键页面（如产品宣传页面）需要包含 <a href="https://www.w3.org/TR/microdata/" target="_blank" rel="noopener">microdata</a>. 当新增信息/功能时，请关注这一推荐。</p><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><h3 id="文档参考来源："><a href="#文档参考来源：" class="headerlink" title="文档参考来源："></a>文档参考来源：</h3><blockquote><ul><li><a href="http://devdocs.magento.com/guides/v2.0/coding-standards/code-standard-html.html" target="_blank" rel="noopener">http://devdocs.magento.com/guides/v2.0/coding-standards/code-standard-html.html</a></li><li><a href="https://github.com/fex-team/styleguide/blob/master/html.md" target="_blank" rel="noopener">https://github.com/fex-team/styleguide/blob/master/html.md</a></li><li><a href="https://contribute.jquery.org/style-guide/html/" target="_blank" rel="noopener">https://contribute.jquery.org/style-guide/html/</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTML-代码规范&quot;&gt;&lt;a href=&quot;#HTML-代码规范&quot; class=&quot;headerlink&quot; title=&quot;HTML 代码规范&quot;&gt;&lt;/a&gt;HTML 代码规范&lt;/h1&gt;&lt;h2 id=&quot;通用规则&quot;&gt;&lt;a href=&quot;#通用规则&quot; class=&quot;headerli
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML/CSS 通用规则</title>
    <link href="https://xbini.github.io/public/2018/12/13/html-css-common-style-guide/"/>
    <id>https://xbini.github.io/public/2018/12/13/html-css-common-style-guide/</id>
    <published>2018-12-13T09:00:13.097Z</published>
    <updated>2018-12-13T09:00:13.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-CSS-通用规则"><a href="#HTML-CSS-通用规则" class="headerlink" title="HTML/CSS 通用规则"></a>HTML/CSS 通用规则</h1><h2 id="通用风格规则"><a href="#通用风格规则" class="headerlink" title="通用风格规则"></a>通用风格规则</h2><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><p><strong>尽量使用带 HTTPS 协议的嵌入资源</strong></p><p>坚持将 HTTPS 协议（<code>https:</code>）应用到图片以及其他媒体文件，样式表，和脚步，除非对应文件无法通过 HTTPS 获得</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://www.google.com/js/gweb/analytics/autotrack.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.google.com/js/gweb/analytics/autotrack.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Bad */</span></span><br><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(//www.google.com/images/example);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Good */</span></span><br><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(https://www.google.com/images/example);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="通用格式化规则"><a href="#通用格式化规则" class="headerlink" title="通用格式化规则"></a>通用格式化规则</h2><h3 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h3><p><strong>使用两个空格</strong></p><p>不要使用 tab 或者混用 tab 和空格的方式作为缩进。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Fantastic</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Great</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="大小写"><a href="#大小写" class="headerlink" title="大小写"></a>大小写</h3><p><strong>只使用小写</strong></p><p>所有代码只使用小写：包括HTML元素名、元素属性、元素属性值（<code>text/CDATA</code> 例外）、css选择器、css属性和css属性值（除了字符串）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">A</span> <span class="attr">HREF</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">A</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"google.png"</span> <span class="attr">alt</span>=<span class="string">"Google"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Bad */</span></span><br><span class="line"><span class="selector-tag">color</span>: <span class="selector-id">#E5E5E5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Good */</span></span><br><span class="line"><span class="selector-tag">color</span>: <span class="selector-id">#e5e5e5</span>;</span><br></pre></td></tr></table></figure><h3 id="尾部空格"><a href="#尾部空格" class="headerlink" title="尾部空格"></a>尾部空格</h3><p><strong>删除多余的尾部空格</strong></p><p>尾部空格是多余的，可能会造成混乱的代码比对（diff）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bad --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>What?_</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Good --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Yes please.</span><br></pre></td></tr></table></figure><h2 id="通用-Meta-规则"><a href="#通用-Meta-规则" class="headerlink" title="通用 Meta 规则"></a>通用 Meta 规则</h2><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p><strong>使用 UTF-8 (no BOM) 编码</strong></p><p>确保你的编辑器文档编码为 UTF-8，没有字节顺序标记。</p><p>在 HTML 中使用 <code>&lt;meta charset=&quot;utf-8&quot;&gt;</code> 置顶文档编码，在 CSS 中默认就是 UTF-8 编码，不需要特别指定。</p><blockquote><p>（更多编码和指定方式的资料可以参见 <a href="http://www.w3.org/International/tutorials/tutorial-char-enc/en/all.html" target="_blank" rel="noopener">Character Sets &amp; Encodings in XHTML, HTML and CSS</a>）</p></blockquote><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><strong>根据需要，给代码做注释</strong></p><p>用注释解释代码：它实现了什么功能，它的目的是什么，为什么这个方案被使用或更好？</p><blockquote><p>（注释代码不是强制要求，视乎项目性质和复杂程度）</p></blockquote><h3 id="待办事项"><a href="#待办事项" class="headerlink" title="待办事项"></a>待办事项</h3><p><strong>使用 <code>TODO</code> 关键词标识待办事项</strong></p><p>只使用 <code>TODO</code> 关键词标识待办事项，而不用 <code>@@</code> 等其他格式。</p><p>使用 <code>TODO(contact)</code> 的形式附上联系方式（用户名和邮件列表）方便联系。</p><p>在冒号后加入待办事项内容，如  <code>TODO: action item</code> 。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;# TODO(john.doe): revisit centering #&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- <span class="doctag">TODO:</span> remove optional tags --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Apples<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Oranges<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Note: 上述规范来自 <a href="https://google.github.io/styleguide/htmlcssguide.html" target="_blank" rel="noopener">Google HTML/CSS Style Guide</a></p></blockquote><hr><hr><h2 id="额外规则"><a href="#额外规则" class="headerlink" title="额外规则"></a>额外规则</h2><h3 id="文件结尾"><a href="#文件结尾" class="headerlink" title="文件结尾"></a>文件结尾</h3><p><strong>文件结尾必须存在至少一空行</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTML-CSS-通用规则&quot;&gt;&lt;a href=&quot;#HTML-CSS-通用规则&quot; class=&quot;headerlink&quot; title=&quot;HTML/CSS 通用规则&quot;&gt;&lt;/a&gt;HTML/CSS 通用规则&lt;/h1&gt;&lt;h2 id=&quot;通用风格规则&quot;&gt;&lt;a href=&quot;#通用风
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git 管理使用指导</title>
    <link href="https://xbini.github.io/public/2018/12/13/git-management-guide/"/>
    <id>https://xbini.github.io/public/2018/12/13/git-management-guide/</id>
    <published>2018-12-13T09:00:13.096Z</published>
    <updated>2018-12-13T09:00:13.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-管理使用指导"><a href="#Git-管理使用指导" class="headerlink" title="Git 管理使用指导"></a>Git 管理使用指导</h1><h2 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h2><ol><li>不允许使用 <code>git commit -m &lt;message&gt;</code> 来提交代码</li><li>如非特殊情况，不允许跳过提交钩子</li><li>commit 信息尽量参考提交模板填写，实在没什么可写，去掉对应部分</li></ol><blockquote><p>概览性规范详见：<a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html</a></p></blockquote><h2 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h2><p>见 <a href="./git-flow-guide.md">Git flow 分支管理模型</a></p><h2 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h2><p>除非特殊情况，只允许 PR 的合并产生 merge commit</p><h2 id="rebase"><a href="#rebase" class="headerlink" title="rebase"></a>rebase</h2><ul><li>非主体分支未被合并前，请尽量基于主体分支进行rebase，减少分支冲突</li><li>若与主体分支发生冲突，请进行<code>interactive rebase</code></li></ul><h2 id="revert"><a href="#revert" class="headerlink" title="revert"></a>revert</h2><p>非特殊情况，不建议生成 revert commit</p><h2 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h2><p>适合本地改动的（各类）回滚。不允许对主体分支进行此类操作</p><h2 id="push-force"><a href="#push-force" class="headerlink" title="push force"></a>push force</h2><ul><li>不允许使用 <code>git push --force</code></li><li>可以针对当前非主体分支进行 <code>git push --force-with-lease</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git-管理使用指导&quot;&gt;&lt;a href=&quot;#Git-管理使用指导&quot; class=&quot;headerlink&quot; title=&quot;Git 管理使用指导&quot;&gt;&lt;/a&gt;Git 管理使用指导&lt;/h1&gt;&lt;h2 id=&quot;commit&quot;&gt;&lt;a href=&quot;#commit&quot; class=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git-flow 开发模型</title>
    <link href="https://xbini.github.io/public/2018/12/13/git-flow-guide/"/>
    <id>https://xbini.github.io/public/2018/12/13/git-flow-guide/</id>
    <published>2018-12-13T09:00:13.095Z</published>
    <updated>2018-12-13T09:00:13.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git-flow-开发模型"><a href="#git-flow-开发模型" class="headerlink" title="git-flow 开发模型"></a>git-flow 开发模型</h2><p>参考自以下几篇文章：</p><ul><li><a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow" target="_blank" rel="noopener">https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow</a></li><li><a href="http://www.ruanyifeng.com/blog/2015/12/git-workflow.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/12/git-workflow.html</a></li><li><a href="http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html" target="_blank" rel="noopener">http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html</a></li></ul><h3 id="定制规范"><a href="#定制规范" class="headerlink" title="定制规范"></a>定制规范</h3><h4 id="开发人员"><a href="#开发人员" class="headerlink" title="开发人员"></a>开发人员</h4><ol><li><p>被分配到任务时，从<code>develop</code>分支分出特性分支。</p><blockquote><p>特性分支命名格式: <code>feature/name[#***]</code>，如果有分配的 issue，注明 issue id(可选)。<br>样例：<code>feature/batch-update(#657)</code></p></blockquote></li><li><p>特性分支开发完成后，向 <code>develop</code> 分支发起 <strong>PR</strong>。开发人员相互 review（可由负责人指定审阅者）。持续提交直至 <strong>PR</strong> 被接受。</p><p> 一旦 <strong>PR</strong> 被接受合并，删除该特性分支。（如果未发布前发现隐藏漏洞，另开<code>fix</code>分支进行修复）</p></li></ol><blockquote><p>开发时难以避免出现需要修复 bug 的情况（非 hotfix）。<br>这时如果 bug 的修复可以独立存在，不影响特性分支的话，<br>需另起<strong>修复分支</strong><code>fix/name[#***]</code>，处理方案基本跟特性分支一样。</p></blockquote><p><strong>总的来说</strong>，开发人员主要接触 <code>develop</code> 分支、<strong>特性分支</strong>、<strong>修复分支</strong>。</p><h4 id="开发负责人"><a href="#开发负责人" class="headerlink" title="开发负责人"></a>开发负责人</h4><h5 id="测试网"><a href="#测试网" class="headerlink" title="测试网"></a>测试网</h5><ol><li>当产品进行部署时，将 <code>develop</code> 分支分出 <code>release</code> 分支（打tag），提交到测试网。<code>release</code> 分支冻结所有新特性的增加（特殊情况除外）。</li><li>测试网发现的Bug，直接在<code>release</code>分支进行提交。</li><li>待<code>release</code>分支稳定后，合并到<code>master</code>（tag: stable），将<code>master</code>分支发布到现网。<br>也合并至 <code>develop</code> 分支，保持 <code>develop</code> 分支的稳定性。而后，删除该<code>release</code>分支。</li></ol><h5 id="现网"><a href="#现网" class="headerlink" title="现网"></a>现网</h5><ol><li>现网发现的bug，直接在 <code>master</code> 分出 <code>hotfix</code>（格式类似特性分支或者<code>hotfix/issue-***</code>） 分支，进行修复。</li><li><code>master</code>分支稳定后，合并回<code>develop</code>分支，删除所有<code>hotfix</code>分支。</li></ol><blockquote><p>上述只是说明职责的划分，具体职责可以视情况按需分配。</p></blockquote><h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><p>各类 IDE 或者 git 管理工具都提供了 git flow 的集成管理。</p><p>如： SourceTree, WebStorm, GitKraken, Sublime Text</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;git-flow-开发模型&quot;&gt;&lt;a href=&quot;#git-flow-开发模型&quot; class=&quot;headerlink&quot; title=&quot;git-flow 开发模型&quot;&gt;&lt;/a&gt;git-flow 开发模型&lt;/h2&gt;&lt;p&gt;参考自以下几篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS 代码规范</title>
    <link href="https://xbini.github.io/public/2018/12/13/css-style-guide/"/>
    <id>https://xbini.github.io/public/2018/12/13/css-style-guide/</id>
    <published>2018-12-13T09:00:13.095Z</published>
    <updated>2018-12-13T09:00:13.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS-代码规范"><a href="#CSS-代码规范" class="headerlink" title="CSS 代码规范"></a>CSS 代码规范</h1><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><p>我们把一个（或一组）选择器和一组属性称之为 “规则”。举个例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.listing</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="声明块"><a href="#声明块" class="headerlink" title="声明块"></a>声明块</h3><p>一对花括号和一组属性的组合称之为 “声明块”。举个例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><p>在规则声明中，“选择器” 负责选取 DOM 树中的元素，这些元素将被定义的属性所修饰。选择器可以匹配 HTML 元素，也可以匹配一个元素的类名、ID, 或者元素拥有的属性。以下是选择器的例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my-element-class</span> &#123;</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[aria-hidden]</span> &#123;</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>最后，属性决定了规则声明里被选择的元素将得到何种样式。属性以键值对形式存在，一个规则声明可以包含一或多个属性定义。以下是属性定义的例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* some selector */</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f1f1f1</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="通用规则"><a href="#通用规则" class="headerlink" title="通用规则"></a>通用规则</h2><blockquote><p>参阅 <a href="./html-css-common-style-guide.md">html-css-common-style-guide</a></p></blockquote><h2 id="CSS-风格规则"><a href="#CSS-风格规则" class="headerlink" title="CSS 风格规则"></a>CSS 风格规则</h2><h3 id="CSS-有效性"><a href="#CSS-有效性" class="headerlink" title="CSS 有效性"></a>CSS 有效性</h3><p><strong>尽可能使用有效的CSS。</strong></p><p>除非遇到验证器bug或者是专有的语法，使用有效的CSS代码。</p><p>使用诸如 <a href="http://jigsaw.w3.org/css-validator/" target="_blank" rel="noopener">W3C CSS validator</a> 等工具验证测试。</p><p>使用有效的CSS代码是一个可衡量CSS代码质量的指标，可帮你找出不起作用、可被删除的CSS代码，从而确保CSS的合理使用。</p><h3 id="id-与-class-的命名"><a href="#id-与-class-的命名" class="headerlink" title="id 与 class 的命名"></a><code>id</code> 与 <code>class</code> 的命名</h3><p><strong>使用有意义的或者通用的 <code>id</code> 和 <code>class</code> 命名</strong></p><p>用能反映出问题中元素的目的或者通用的<code>id</code>、<code>class</code>命名，代替那些很表象的、难懂的命名。</p><p>首选特定的或者能反映出元素目的的命名。因为这样容易理解，也不太可能被修改</p><p>通用的命名通常作为非特殊元素或与兄弟元素无区别的元素的备选命名。他们常被称为“辅助元素”。</p><p>使用功能性或者通用的命名，可减少不必要的文档或者模板变化。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐：无意义 */</span></span><br><span class="line"><span class="selector-id">#yee-1901</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐：表象 */</span></span><br><span class="line"><span class="selector-class">.button-green</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.clear</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐：具体的 */</span></span><br><span class="line"><span class="selector-id">#gallery</span> &#123;&#125;</span><br><span class="line"><span class="selector-id">#login</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.video</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐：通用的 */</span></span><br><span class="line"><span class="selector-class">.aux</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.alt</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="id-与-class-的命名风格"><a href="#id-与-class-的命名风格" class="headerlink" title="id 与 class 的命名风格"></a><code>id</code> 与 <code>class</code> 的命名风格</h3><p><strong><code>ID</code> 和 <code>class</code> 命名要尽可能简短，但必要的话就别怕长。</strong></p><p>尽可能简洁地传达 <code>id</code> 或者 <code>class</code> 名称的含义。</p><p>使用简洁的 <code>id</code> 或者 <code>class</code> 名称有助于提高可读性和代码效率。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-id">#navigation</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.atr</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-id">#nav</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.author</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="类型选择器"><a href="#类型选择器" class="headerlink" title="类型选择器"></a>类型选择器</h3><p><strong>应当避免在 <code>id</code> 和 <code>class</code> 前添加类型选择器。</strong></p><p>除了必要情况下（例如辅助的类），不要将元素名称与 <code>id</code> 或 <code>class</code> 结合作为选择器。</p><p>避免不必要的祖先选择器是出于 <a href="http://www.stevesouders.com/blog/2009/06/18/simplifying-css-selectors/" target="_blank" rel="noopener">性能原因</a> 的考虑。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-id">#example</span> &#123;&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.error</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-id">#example</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.error</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="ID-选择器"><a href="#ID-选择器" class="headerlink" title="ID 选择器"></a>ID 选择器</h3><p>在 CSS 中，虽然可以通过 ID 选择元素，但大家通常都会把这种方式列为反面教材。ID 选择器给你的规则声明带来了不必要的高<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity" target="_blank" rel="noopener">优先级</a>，而且 ID 选择器是不可重用的。</p><p>想要了解关于这个主题的更多内容，参见 <a href="http://csswizardry.com/2014/07/hacks-for-dealing-with-specificity/" target="_blank" rel="noopener">CSS Wizardry 的文章</a>，文章中有关于如何处理优先级的内容。</p><p>再说一遍: <strong>永远不要嵌套 ID 选择器！</strong></p><p>如果你始终坚持要使用 ID 选择器（劝你三思），那也不应该嵌套它们。如果你正打算这么做，你需要先重新检查你的标签，或者指明原因。如果你想要写出风格良好的 HTML 和 CSS，你是<strong>不</strong>应该这样做的。</p><h3 id="JavaScript-钩子"><a href="#JavaScript-钩子" class="headerlink" title="JavaScript 钩子"></a>JavaScript 钩子</h3><p>避免在 CSS 和 JavaScript 中绑定相同的类。否则开发者在重构时通常会出现以下情况：轻则浪费时间在对照查找每个要改变的类，重则因为害怕破坏功能而不敢作出更改。</p><p>我们推荐在创建用于特定 JavaScript 的类名时，添加 <code>.js-</code> 前缀：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary js-request-to-book"</span>&gt;</span>Request to Book<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Note: 这个规则在 <code>SPA</code> 类型应用中<strong>不是必要</strong>的。</p></blockquote><h3 id="简写属性"><a href="#简写属性" class="headerlink" title="简写属性"></a>简写属性</h3><p><strong>尽可能使用简写的属性书写方式。</strong></p><p>CSS提供了多种属性 <a href="http://www.w3.org/TR/CSS21/about.html#shorthand" target="_blank" rel="noopener">简写</a> 的方式（如 <strong>font</strong>），即使只显式设置一个值，也应该尽可能地使用。</p><p>使用简写属性有助于提高代码效率及可读性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">border-top-style</span>: <span class="selector-tag">none</span>;</span><br><span class="line"><span class="selector-tag">font-family</span>: <span class="selector-tag">palatino</span>, <span class="selector-tag">georgia</span>, <span class="selector-tag">serif</span>;</span><br><span class="line"><span class="selector-tag">font-size</span>: 100%;</span><br><span class="line"><span class="selector-tag">line-height</span>: 1<span class="selector-class">.6</span>;</span><br><span class="line"><span class="selector-tag">padding-bottom</span>: 2<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">padding-left</span>: 1<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">padding-right</span>: 1<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">padding-top</span>: 0;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">border-top</span>: 0;</span><br><span class="line">font: 100%/1.6 palatino, georgia, serif;</span><br><span class="line"><span class="selector-tag">padding</span>: 0 1<span class="selector-tag">em</span> 2<span class="selector-tag">em</span>;</span><br></pre></td></tr></table></figure><h3 id="0与单位"><a href="#0与单位" class="headerlink" title="0与单位"></a>0与单位</h3><p><strong>省略“0”后的单位。</strong></p><p>除非必需，否则<code>0</code>后不要加单位。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 0;</span><br><span class="line"><span class="selector-tag">padding</span>: 0;</span><br></pre></td></tr></table></figure><h3 id="前导-“0”"><a href="#前导-“0”" class="headerlink" title="前导 “0”"></a>前导 “0”</h3><p><strong>省略前导 “0” 值。</strong></p><p>在<code>-1</code>至<code>1</code>之间的值无需保留整数位的<code>0</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-size</span>: <span class="selector-class">.8em</span>;</span><br></pre></td></tr></table></figure><h3 id="无边框"><a href="#无边框" class="headerlink" title="无边框"></a>无边框</h3><p>在定义无边框样式时，使用 <code>0</code> 代替 <code>none</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Bad */</span></span><br><span class="line"><span class="selector-class">.foo</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Good */</span></span><br><span class="line"><span class="selector-class">.foo</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十六进制表示法"><a href="#十六进制表示法" class="headerlink" title="十六进制表示法"></a>十六进制表示法</h3><p><strong>在可能的情况下使用3个字符的十六进制表示法。</strong></p><p>对于可用3字符十六进制表示的颜色值，按此规则书写更短、更简洁。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">color</span>: <span class="selector-id">#eebbcc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">color</span>: <span class="selector-id">#ebc</span>;</span><br></pre></td></tr></table></figure><h3 id="选择器前缀"><a href="#选择器前缀" class="headerlink" title="选择器前缀"></a>选择器前缀</h3><p><strong>对选择器加上应用特定的前缀（可选）</strong></p><p>大型项目中以及嵌入在其它项目或外部网站上的代码需要给 <code>id</code> 和 <code>class</code> 添加前缀（命名空间）。使用短的、独特的标识符，并在其后跟一个破折号。<br>使用命名空间有助于防止命名冲突，可以让维护变得简单，例如在搜索和替换操作时。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.adw-help</span> &#123;&#125; <span class="comment">/* AdWords */</span></span><br><span class="line"><span class="selector-id">#maia-note</span> &#123;&#125; <span class="comment">/* Maia */</span></span><br></pre></td></tr></table></figure><h3 id="id-与-class-名称分隔符"><a href="#id-与-class-名称分隔符" class="headerlink" title="id 与 class 名称分隔符"></a><code>id</code> 与 <code>class</code> 名称分隔符</h3><p><strong>用连字符分隔 <code>id</code> 和 <code>class</code> 中的单词。</strong></p><p>选择器中的词语和缩写中不要使用除了连字符以外的任何字符（包括空字符），以提高可理解性和可读性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐: 单词未分开 */</span></span><br><span class="line"><span class="selector-class">.demoimage</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐：使用下划线而不是连字符 */</span></span><br><span class="line"><span class="selector-class">.error_status</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-id">#video-id</span> &#123;&#125;</span><br><span class="line"><span class="selector-class">.ads-sample</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="OOCSS-和-BEM"><a href="#OOCSS-和-BEM" class="headerlink" title="OOCSS 和 BEM"></a>OOCSS 和 BEM</h3><p>出于以下原因，我们鼓励使用 OOCSS 和 BEM 的某种组合：</p><ul><li>可以帮助我们理清 CSS 和 HTML 之间清晰且严谨的关系。</li><li>可以帮助我们创建出可重用、易装配的组件。</li><li>可以减少嵌套，降低特定性。</li><li>可以帮助我们创建出可扩展的样式表。</li></ul><p><strong>OOCSS</strong>，也就是 “Object Oriented CSS（面向对象的CSS）”，是一种写 CSS 的方法，其思想就是鼓励你把样式表看作“对象”的集合：创建可重用性、可重复性的代码段让你可以在整个网站中多次使用。</p><p>参考资料：</p><ul><li>Nicole Sullivan 的 <a href="https://github.com/stubbornella/oocss/wiki" target="_blank" rel="noopener">OOCSS wiki</a></li><li>Smashing Magazine 的 <a href="http://www.smashingmagazine.com/2011/12/12/an-introduction-to-object-oriented-css-oocss/" target="_blank" rel="noopener">Introduction to OOCSS</a></li></ul><p><strong>BEM</strong>，也就是 “Block-Element-Modifier”，是一种用于 HTML 和 CSS 类名的<em>命名约定</em>。BEM 最初是由 Yandex 提出的，要知道他们拥有巨大的代码库和可伸缩性，BEM 就是为此而生的，并且可以作为一套遵循 OOCSS 的参考指导规范。</p><ul><li>CSS Trick 的 <a href="https://css-tricks.com/bem-101/" target="_blank" rel="noopener">BEM 101</a></li><li>Harry Roberts 的 <a href="http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/" target="_blank" rel="noopener">introduction to BEM</a></li></ul><p><strong>示例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"listing-card listing-card--featured"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"listing-card__title"</span>&gt;</span>Adorable 2BR in the sunny Mission<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"listing-card__content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Vestibulum id ligula porta felis euismod semper.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.listing-card</span> &#123; &#125;</span><br><span class="line"><span class="selector-class">.listing-card--featured</span> &#123; &#125;</span><br><span class="line"><span class="selector-class">.listing-card__title</span> &#123; &#125;</span><br><span class="line"><span class="selector-class">.listing-card__content</span> &#123; &#125;</span><br></pre></td></tr></table></figure><ul><li><code>.listing-card</code> 是一个块（block），表示高层次的组件。</li><li><code>.listing-card__title</code> 是一个元素（element），它属于 <code>.listing-card</code> 的一部分，因此块是由元素组成的。</li><li><code>.listing-card--featured</code> 是一个修饰符（modifier），表示这个块与 <code>.listing-card</code> 有着不同的状态或者变化。</li></ul><h3 id="Hacks"><a href="#Hacks" class="headerlink" title="Hacks"></a>Hacks</h3><p><strong>请先尝试其他的方法，避免用户代理检测以及CSS的“hacks”。</strong></p><p>进行用户代理检测或使用特殊的CSS选择器及hacks看起来是处理样式差异的捷径。但为了实现和保持高效性以及代码的可维护性，这两种方案应该放到最后考虑。换句话说，用户代理检测和使用hacks会增大项目推进的阻力，所以从项目的长远利益考虑应尽力避免。一旦允许并无顾忌地使用用户代理检测和hacks便很容易滥用，最终一发而不可收。</p><h2 id="CSS-格式化规则"><a href="#CSS-格式化规则" class="headerlink" title="CSS 格式化规则"></a>CSS 格式化规则</h2><h3 id="声明顺序"><a href="#声明顺序" class="headerlink" title="声明顺序"></a>声明顺序</h3><h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h4><p><strong>按字母顺序排列声明。</strong></p><p>css文件书写按字母顺序排列的方式，容易记忆和维护，以达到一致的代码。</p><p>在排序时忽略浏览器特定的前缀。但是，特定CSS属性的多个浏览器前缀应按字母顺序排列（如<code>-moz-</code>书写在<code>-webkit-</code>前面）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-tag">fuchsia</span>;</span><br><span class="line"><span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span>;</span><br><span class="line"><span class="selector-tag">-moz-border-radius</span>: 4<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">-webkit-border-radius</span>: 4<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-radius</span>: 4<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">color</span>: <span class="selector-tag">black</span>;</span><br><span class="line"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="selector-tag">text-indent</span>: 2<span class="selector-tag">em</span>;</span><br></pre></td></tr></table></figure><h4 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h4><p>相关的属性声明应当归为一组，并按照下面的顺序排列：</p><ol><li>Positioning</li><li>Box model</li><li>Typographic</li><li>Visual</li></ol><p>由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因此排在首位。盒模型排在第二位，因为它决定了组件的尺寸和位置。</p><p>其他属性只是影响组件的<em>内部（inside）</em>或者是不影响前两组属性，因此排在后面。</p><p>完整的属性列表及其排列顺序请参考 <a href="http://twitter.github.com/recess" target="_blank" rel="noopener">Recess</a>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.declaration-order</span> &#123;</span><br><span class="line">  <span class="comment">/* Positioning */</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Box-model */</span></span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Typography */</span></span><br><span class="line">  <span class="attribute">font</span>: normal <span class="number">13px</span> <span class="string">"Helvetica Neue"</span>, sans-serif;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Visual */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e5e5e5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Misc */</span></span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="块内容的缩进"><a href="#块内容的缩进" class="headerlink" title="块内容的缩进"></a>块内容的缩进</h3><p><strong>缩进所有块级内容。</strong></p><p>缩进 <a href="http://www.w3.org/TR/CSS21/syndata.html#block" target="_blank" rel="noopener">块级内容</a>，即嵌套的及声明块中的规则，以体现层级并提高可读性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen, projection &#123;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#444</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="声明结束符"><a href="#声明结束符" class="headerlink" title="声明结束符"></a>声明结束符</h3><p><strong>每个属性后使用分号结束。</strong></p><p>以分号结束每个属性，提高一致性和可扩展性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-class">.test</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.test</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS-属性名结束符"><a href="#CSS-属性名结束符" class="headerlink" title="CSS 属性名结束符"></a>CSS 属性名结束符</h3><p><strong>属性名称的冒号后有一个空格。</strong></p><p>为保证一致性，在属性名与属性值之间添加一个空格（但是属性名和冒号间没有空格）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="声明块分离"><a href="#声明块分离" class="headerlink" title="声明块分离"></a>声明块分离</h3><p><strong>在选择器和后面的声明块之间使用一个空格。</strong></p><p>最后一个选择器与表示 <a href="http://www.w3.org/TR/CSS21/syndata.html#rule-sets" target="_blank" rel="noopener">声明块</a> 开始的左大花括号在同行，中间有一个字符空格。</p><p>表示开始的左花括号和选择器在同行。<br>表示结束的右花括号放在新的一行。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐：缺少空格 */</span></span><br><span class="line"><span class="selector-id">#video</span>&#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐：不必要的换行符 */</span></span><br><span class="line"><span class="selector-id">#video</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不推荐：右花括号前缺少换行符 */</span></span><br><span class="line"><span class="selector-id">#video</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">1em</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-id">#video</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择器及声明分离"><a href="#选择器及声明分离" class="headerlink" title="选择器及声明分离"></a>选择器及声明分离</h3><p><strong>每个选择器和声明独立成行。</strong></p><p>总是让每个选择器和声明单独成行。</p><p>如果规则只有一行声明，那么就不必再起行。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:focus</span>, <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative; <span class="attribute">top</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line"><span class="selector-class">.icon--home</span>     &#123; <span class="attribute">background-position</span>:   <span class="number">0</span>     <span class="number">0</span>  ; &#125;</span><br><span class="line"><span class="selector-class">.icon--person</span>   &#123; <span class="attribute">background-position</span>: -<span class="number">16px</span>   <span class="number">0</span>  ; &#125;</span><br><span class="line"><span class="selector-class">.icon--files</span>    &#123; <span class="attribute">background-position</span>:   <span class="number">0</span>   -<span class="number">16px</span>; &#125;</span><br><span class="line"><span class="selector-class">.icon--settings</span> &#123; <span class="attribute">background-position</span>: -<span class="number">16px</span> -<span class="number">16px</span>; &#125;</span><br></pre></td></tr></table></figure><h3 id="规则分隔"><a href="#规则分隔" class="headerlink" title="规则分隔"></a>规则分隔</h3><p><strong>使用空行分隔规则。</strong></p><p>始终把一个空行（两个换行符）放在代码块规则之间。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS-引号"><a href="#CSS-引号" class="headerlink" title="CSS 引号"></a>CSS 引号</h3><p><strong>属性选择器和属性值中使用单引号。</strong></p><p>在属性选择器及属性值中使用单引号（<code>&#39;&#39;</code>）而不是双引号（<code>&quot;&quot;</code>）。在 <code>url()</code> 中不要使用引号。</p><p>特例：如果你确实需要定义 <code>@charset</code> ，由于 <a href="http://www.w3.org/TR/CSS21/syndata.html#charset" target="_blank" rel="noopener">不允许使用单引号</a> ，故请使用双引号。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 不推荐 */</span></span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">"//www.google.com/css/maia.css"</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"open sans"</span>, arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 推荐 */</span></span><br><span class="line">@<span class="keyword">import</span> url(//www.google.com/css/maia.css);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'open sans'</span>, arial, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS-元规则"><a href="#CSS-元规则" class="headerlink" title="CSS 元规则"></a>CSS 元规则</h2><h3 id="栏目-模块标题注释"><a href="#栏目-模块标题注释" class="headerlink" title="栏目/模块标题注释"></a>栏目/模块标题注释</h3><p><strong>项目中的每一个主要栏目都需要附上标题：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*------------------------------------*\</span></span><br><span class="line"><span class="comment">    #SECTION-TITLE</span></span><br><span class="line"><span class="comment">\*------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.selector</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>栏目的标题以<code>#</code>号起头，以便我们更好的搜索。</p><p>在标题和下一行代码间加入空行（无论那行代码是评论，Sass 或者 CSS）</p><p>如果这个项目中，每个栏目都有自己的文件，那么标题应该在每个文件的顶部。如果一个文件内有几个栏目，每个标题前应插入 <code>5</code> 个空行。额外空格和标题让寻找变得更加简单。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*------------------------------------*\</span></span><br><span class="line"><span class="comment">    #A-SECTION</span></span><br><span class="line"><span class="comment">\*------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.selector</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*------------------------------------*\</span></span><br><span class="line"><span class="comment">    #ANOTHER-SECTION</span></span><br><span class="line"><span class="comment">\*------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Comment</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.another-selector</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="更详细的注释"><a href="#更详细的注释" class="headerlink" title="更详细的注释"></a>更详细的注释</h3><p>CSS 带来的认知负担是巨大的。有许多东西需要注意，有很多和项目有关的细节要去记，开发者遇到最糟糕的情况是面对其他人写的代码。记住自己的 class、规则、对象和助手不难，难得是理解其他人的。</p><p>CSS 需要更多的评论。</p><p>因为 CSS 是声明性的语言，所以单单看 CSS 的话，很难透过字面意思，去辨识其含义</p><ul><li>有些 CSS 可能依赖其他地方的代码</li><li>改变某段代码的对其他代码的影响</li><li>什么地方已经应用了某些样式（代码冗余）</li><li>继承了怎样的样式（刻意或者无意）</li><li>传递了怎样的样式（刻意或者无意）</li><li>原作者想把样式用在哪里</li></ul><p>这里甚至没有考量 CSS 的诸多奇异特性，例如多种 <code>overflow</code> 触发的块格式、或者某些 <code>transform</code> 属性触发硬件加速，这对接手的开发者来说更加的麻烦。</p><p>因为 CSS 无法很好的描述自己的情况，这是一个非常需要注释的语言。</p><p>一个规则是，注释任何一眼不能看穿的代码。意思就是，不需要告诉大家颜色的含义，但是如果使用 <code>overflow: hidden</code> 来去除浮动，而不是用来截去某个元素的 <code>overflow</code>，那么这就值得记录。</p><h4 id="顶层设计"><a href="#顶层设计" class="headerlink" title="顶层设计"></a>顶层设计</h4><p>对于解释整个分段或组件的大块注释来说，使用 DocBlock 级的多行评论，每行 80 字符宽。</p><p>这是来自 CSS Wizardry 网站中记录页头的真实例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The site’s main page-head can have two different states:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 1) Regular page-head with no backgrounds or extra treatments; it just</span></span><br><span class="line"><span class="comment"> *    contains the logo and nav.</span></span><br><span class="line"><span class="comment"> * 2) A masthead that has a fluid-height (becoming fixed after a certain point)</span></span><br><span class="line"><span class="comment"> *    which has a large background image, and some supporting text.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The regular page-head is incredibly simple, but the masthead version has some</span></span><br><span class="line"><span class="comment"> * slightly intermingled dependency with the wrapper that lives inside it.</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p><strong>重要的代码都要这么做。</strong></p><h4 id="对象扩展指针"><a href="#对象扩展指针" class="headerlink" title="对象扩展指针"></a>对象扩展指针</h4><p>当横跨多个部分，或者应用了 OOCSS 的方法时，你通常会发觉相互影响的规则通常不在同一个文件或者地方。</p><p>例如，有一个通用的按钮对象，只提供纯粹的结构样式，它还有一个扩展的对象，用来加上装饰效果。用简单的对象扩展指针来记录这种关系。在对象文件中：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Extend `.btn &#123;&#125;` in _components.buttons.scss.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>在你的主题文件中：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * These rules extend `.btn &#123;&#125;` in _objects.buttons.scss.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn--positive</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn--negative</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>对不熟悉项目多个部分关系的开发者而言，或者希望了解样式继承规则的人来说，这种简单、省事的注释可以节约很多精力。</p><h4 id="底层-细节解释"><a href="#底层-细节解释" class="headerlink" title="底层/细节解释"></a>底层/细节解释</h4><p>有时候我们想评论特定的（某行）声明/规则，可以用反向脚注，以下是一个大型网站头部的脚注例子：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Large site headers act more like mastheads. They have a faux-fluid-height</span></span><br><span class="line"><span class="comment"> * which is controlled by the wrapping element inside it.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 1. Mastheads will typically have dark backgrounds, so we need to make sure</span></span><br><span class="line"><span class="comment"> *    the contrast is okay. This value is subject to change as the background</span></span><br><span class="line"><span class="comment"> *    image changes.</span></span><br><span class="line"><span class="comment"> * 2. We need to delegate a lot of the masthead’s layout to its wrapper element</span></span><br><span class="line"><span class="comment"> *    rather than the masthead itself: it is to this wrapper that most things</span></span><br><span class="line"><span class="comment"> *    are positioned.</span></span><br><span class="line"><span class="comment"> * 3. The wrapper needs positioning context for us to lay our nav and masthead</span></span><br><span class="line"><span class="comment"> *    text in.</span></span><br><span class="line"><span class="comment"> * 4. Faux-fluid-height technique: simply create the illusion of fluid height by</span></span><br><span class="line"><span class="comment"> *    creating space via a percentage padding, and then position everything over</span></span><br><span class="line"><span class="comment"> *    the top of that. This percentage gives us a 16:9 ratio.</span></span><br><span class="line"><span class="comment"> * 5. When the viewport is at 758px wide, our 16:9 ratio means that the masthead</span></span><br><span class="line"><span class="comment"> *    is currently rendered at 480px high. Let’s…</span></span><br><span class="line"><span class="comment"> * 6. …seamlessly snip off the fluid feature at this height, and…</span></span><br><span class="line"><span class="comment"> * 7. …fix the height at 480px. This means that we should see no jumps in height</span></span><br><span class="line"><span class="comment"> *    as the masthead moves from fluid to fixed. This actual value takes into</span></span><br><span class="line"><span class="comment"> *    account the padding and the top border on the header itself.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.page-head--masthead</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background</span>: url(/img/css/masthead.jpg) center center <span class="number">#2e2620</span>;</span><br><span class="line">    @<span class="keyword">include</span> vendor(background-size, cover);</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$color-masthead</span>; <span class="comment">/* [1] */</span></span><br><span class="line">    <span class="attribute">border-top-color</span>: <span class="variable">$color-masthead</span>;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>) inset;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">include</span> media-query(lap-and-up) &#123;</span><br><span class="line">        <span class="attribute">background-image</span>: url(/img/css/masthead-medium.jpg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">include</span> media-query(desk) &#123;</span><br><span class="line">        <span class="attribute">background-image</span>: url(/img/css/masthead-large.jpg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt; <span class="selector-class">.wrapper</span> &#123; <span class="comment">/* [2] */</span></span><br><span class="line">        <span class="attribute">position</span>: relative; <span class="comment">/* [3] */</span></span><br><span class="line">        <span class="attribute">padding-top</span>: <span class="number">56.25%</span>; <span class="comment">/* [4] */</span></span><br><span class="line"></span><br><span class="line">        @<span class="keyword">media</span> screen and (min-width: 758px) &#123; <span class="comment">/* [5] */</span></span><br><span class="line">            <span class="attribute">padding-top</span>: <span class="number">0</span>; <span class="comment">/* [6] */</span></span><br><span class="line">            <span class="attribute">height</span>: <span class="variable">$header-max-height</span> - double(<span class="variable">$spacing-unit</span>) - <span class="variable">$header-border-width</span>; <span class="comment">/* [7] */</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h2><h3 id="文档参考来源"><a href="#文档参考来源" class="headerlink" title="文档参考来源"></a>文档参考来源</h3><blockquote><ul><li><a href="https://google.github.io/styleguide/htmlcssguide.html#CSS" target="_blank" rel="noopener">https://google.github.io/styleguide/htmlcssguide.html#CSS</a></li><li><a href="http://cssguidelin.es/#introduction" target="_blank" rel="noopener">http://cssguidelin.es/#introduction</a></li><li><a href="https://github.com/airbnb/css" target="_blank" rel="noopener">https://github.com/airbnb/css</a></li><li><a href="http://codeguide.bootcss.com" target="_blank" rel="noopener">http://codeguide.bootcss.com</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CSS-代码规范&quot;&gt;&lt;a href=&quot;#CSS-代码规范&quot; class=&quot;headerlink&quot; title=&quot;CSS 代码规范&quot;&gt;&lt;/a&gt;CSS 代码规范&lt;/h1&gt;&lt;h2 id=&quot;术语&quot;&gt;&lt;a href=&quot;#术语&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>持续集成设计文档</title>
    <link href="https://xbini.github.io/public/2018/12/13/ci-development/"/>
    <id>https://xbini.github.io/public/2018/12/13/ci-development/</id>
    <published>2018-12-13T09:00:13.094Z</published>
    <updated>2018-12-13T09:00:13.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="持续集成设计文档"><a href="#持续集成设计文档" class="headerlink" title="持续集成设计文档"></a>持续集成设计文档</h1><hr><h2 id="文档信息管理表"><a href="#文档信息管理表" class="headerlink" title="文档信息管理表"></a>文档信息管理表</h2><table><thead><tr><th style="text-align:center">标题</th><th style="text-align:center">内容</th></tr></thead><tbody><tr><td style="text-align:center">名称</td><td style="text-align:center">name</td></tr><tr><td style="text-align:center">最近发布版本</td><td style="text-align:center">2.26.0</td></tr><tr><td style="text-align:center">操作系统</td><td style="text-align:center">Windows 7，Windows 10，Ubuntu 16.04+， Mac OS 8.x+</td></tr><tr><td style="text-align:center">软件平台</td><td style="text-align:center">浏览器（Chrome 50+, Firefox 40+）</td></tr><tr><td style="text-align:center">功能</td><td style="text-align:center">features</td></tr><tr><td style="text-align:center">关键字</td><td style="text-align:center">SPA，MPA，Vue，ES6+，SASS，Flux，WebSocket</td></tr><tr><td style="text-align:center">创建日期</td><td style="text-align:center">2018-05-10</td></tr></tbody></table><h2 id="文档变更记录表"><a href="#文档变更记录表" class="headerlink" title="文档变更记录表"></a>文档变更记录表</h2><table><thead><tr><th style="text-align:center">更 改 人</th><th style="text-align:center">日  期</th><th style="text-align:center">内 容</th></tr></thead><tbody><tr><td style="text-align:center">name</td><td style="text-align:center">2018-05-10</td><td style="text-align:center">创建文档</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;持续集成设计文档&quot;&gt;&lt;a href=&quot;#持续集成设计文档&quot; class=&quot;headerlink&quot; title=&quot;持续集成设计文档&quot;&gt;&lt;/a&gt;持续集成设计文档&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;文档信息管理表&quot;&gt;&lt;a href=&quot;#文档信息管理表&quot; class=&quot;h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>架构文档</title>
    <link href="https://xbini.github.io/public/2018/12/13/architecture/"/>
    <id>https://xbini.github.io/public/2018/12/13/architecture/</id>
    <published>2018-12-13T09:00:13.093Z</published>
    <updated>2018-12-13T09:00:13.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="架构文档"><a href="#架构文档" class="headerlink" title="架构文档"></a>架构文档</h1><h2 id="架构概览图"><a href="#架构概览图" class="headerlink" title="架构概览图"></a>架构概览图</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/public/images/architecture.png" alt="架构概览" title="">                </div>                <div class="image-caption">架构概览</div>            </figure><h2 id="开发模型"><a href="#开发模型" class="headerlink" title="开发模型"></a>开发模型</h2><h3 id="模块化方案"><a href="#模块化方案" class="headerlink" title="模块化方案"></a>模块化方案</h3><ul><li>使用<code>ES2015+</code>语法编写代码</li><li>使用<code>Vue</code> 组件规范定义的<code>HTML/Style</code>模块化方案，尽量不要内联模板与样式文件</li><li>使用<code>Webpack</code>的3大javascript规范兼容特性，尽量使用<code>ES2015+</code>规范中<code>import/export</code>相关语法进行模块引入/导出</li><li>基于<code>职责单一</code>原则独立以下单元<ol><li><code>service</code>单元</li><li><code>component</code>单元</li><li><code>pipeline</code>单元</li><li><code>directive</code>单元</li><li><code>common style</code>单元</li><li><code>common module</code>单元</li></ol></li><li>通过预先设置相对地址结合<code>copy-webpack-plugin</code>插件管理拷贝静态资源</li><li>使用<code>webpack</code>及相关工具编译成浏览器友好的<code>ES5</code>代码（core-concept: <code>tree-shaking</code>）</li><li>使用<code>weback-dev-server</code>及相关工具进行开发（core-concept: <code>hot-module-reload</code>）</li></ul><h3 id="组件化方案"><a href="#组件化方案" class="headerlink" title="组件化方案"></a>组件化方案</h3><ul><li>整个应用是一个单根组件树</li><li>每个逻辑页面尽量设计成一个页面级组件</li><li>非页面级组件按功能细分成子组件，抽离跨页面共用子组件<ol><li>简单组件使用.vue单文件组件编写</li><li>vue提供了.vue单文件组件<code>scope style</code>功能，但由于<code>CSSOM</code>性能问题并且便于培养良好的代码命名习惯，开发者应该谨慎使用此特性</li><li>复杂组件使用<a href="https://github.com/vuejs/vue-class-component" target="_blank" rel="noopener">vue-class-component</a>，<a href="https://github.com/kaorun343/vue-property-decorator" target="_blank" rel="noopener">vue-property-decorator</a>进行细粒度拆分，向<code>typescript</code>平滑过渡</li></ol></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eg:</span></span><br><span class="line"><span class="comment">// in user-component.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Component, Emit, Inject, Model, Prop, Provide, Watch &#125; <span class="keyword">from</span> <span class="string">'vue-property-decorator'</span></span><br><span class="line"><span class="comment">// html-loader will process these files and output as string</span></span><br><span class="line"><span class="keyword">import</span> template <span class="keyword">from</span> <span class="string">'./user-component.html'</span></span><br><span class="line"><span class="comment">// sass-loader will process these files and output as string,then extra it to .css file</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./user-component.scss'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> s = Symbol(<span class="string">'baz'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">template,</span><br><span class="line">...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserComponent <span class="keyword">extends</span> Vue &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Emit</span>()</span><br><span class="line">  addToCount(n: <span class="built_in">number</span>)&#123; <span class="keyword">this</span>.count += n &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Emit</span>(<span class="string">'reset'</span>)</span><br><span class="line">  resetCount()&#123; <span class="keyword">this</span>.count = <span class="number">0</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Inject</span>() foo: <span class="built_in">string</span></span><br><span class="line">  <span class="meta">@Inject</span>(<span class="string">'bar'</span>) bar: <span class="built_in">string</span></span><br><span class="line">  <span class="meta">@Inject</span>(s) baz: <span class="built_in">string</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Model</span>(<span class="string">'change'</span>) checked: <span class="built_in">boolean</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Prop</span>()</span><br><span class="line">  propA: <span class="built_in">number</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Prop</span>(&#123; <span class="keyword">default</span>: <span class="string">'default value'</span> &#125;)</span><br><span class="line">  propB: <span class="built_in">string</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Prop</span>([<span class="built_in">String</span>, <span class="built_in">Boolean</span>])</span><br><span class="line">  propC: <span class="built_in">string</span> | <span class="built_in">boolean</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Provide</span>() foo = <span class="string">'foo'</span></span><br><span class="line">  <span class="meta">@Provide</span>(<span class="string">'bar'</span>) baz = <span class="string">'bar'</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Watch</span>(<span class="string">'child'</span>)</span><br><span class="line">  onChildChanged(val: <span class="built_in">string</span>, oldVal: <span class="built_in">string</span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Watch</span>(<span class="string">'person'</span>, &#123; immediate: <span class="literal">true</span>, deep: <span class="literal">true</span> &#125;)</span><br><span class="line">  onPersonChanged(val: Person, oldVal: Person) &#123; &#125;</span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h3><blockquote><p>考虑引入<a href="https://github.com/ktsn/vuex-class/" target="_blank" rel="noopener">vuex-class</a>，向<code>typescript</code>平滑过渡</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li>采用flux设计，<a href="http://facebook.github.io/flux/docs/overview.html#content" target="_blank" rel="noopener">详细信息</a></li><li>依赖<a href="https://vuex.vuejs.org/en/" target="_blank" rel="noopener">vuex</a>，专为Vue实现的类flux状态管理器</li><li>为减小store在整个项目的复杂度以及不必要的数据维护，开发者应当深入理解该状态管理模型。</li><li>并不是所有的数据都会交给store来管理（如页面中一次性消费的数据以及一些不需要持续维护管理的数据）</li></ul><h4 id="设计哲学"><a href="#设计哲学" class="headerlink" title="设计哲学"></a>设计哲学</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://vuex.vuejs.org/vuex.png" alt="@vuex工作图示" title="">                </div>                <div class="image-caption">@vuex工作图示</div>            </figure><h3 id="样式结构"><a href="#样式结构" class="headerlink" title="样式结构"></a>样式结构</h3><ul><li>组件样式文件附着于组件文件夹</li><li>公共样式模型</li><li>主题管理（TODO）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">│</span><br><span class="line">└─── core</span><br><span class="line">│   │   ...</span><br><span class="line">│   └───style</span><br><span class="line">│       │   normalize.scss</span><br><span class="line">│       │   common.scss</span><br><span class="line">│       │   index.scss</span><br><span class="line">│       │   ...</span><br><span class="line">│       └───other-css-module-folder</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;架构文档&quot;&gt;&lt;a href=&quot;#架构文档&quot; class=&quot;headerlink&quot; title=&quot;架构文档&quot;&gt;&lt;/a&gt;架构文档&lt;/h1&gt;&lt;h2 id=&quot;架构概览图&quot;&gt;&lt;a href=&quot;#架构概览图&quot; class=&quot;headerlink&quot; title=&quot;架构概览图&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
